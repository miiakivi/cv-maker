{"version":3,"sources":["webpack://cv-maker/./src/components/footer/FooterItemForm.js","webpack://cv-maker/./src/components/footer/FooterItem.js","webpack://cv-maker/./src/components/footer/Footer.js","webpack://cv-maker/./src/components/formComponents/FormButtons.js","webpack://cv-maker/./src/components/formComponents/FormItem.js","webpack://cv-maker/./src/helpers/handleFocus.js","webpack://cv-maker/./src/helpers/localStorage.js","webpack://cv-maker/./src/helpers/openItemEditingForm.js","webpack://cv-maker/./src/helpers/updateState.js","webpack://cv-maker/./src/helpers/useOutsideClick.js"],"names":["props","ref","useRef","obj","valueObj","useState","refName","setRefName","jobTitle","setJobTitle","companyName","setCompanyName","howToReach","setHowToReach","editOldItem","updateState","stateUpdater","id","editMode","useOutsideClick","header","setForm","className","FormItem","label","stateValue","inputType","inputRequired","FormButtons","submitType","edit","add","prev","Date","now","item","onClick","globalEditingMode","openItemEditingForm","defaultListItems","RenderFooterItems","itemType","formOpen","setFormOpen","itemObj","listOfItems","setListOfItems","addNewFormOpen","setAddNewFormOpen","getItemsFromStorage","setItemsToStorage","map","key","removeItemFromList","htmlFor","onChange","e","target","value","onFocus","handleFocus","name","type","required","select","dataName","stateContent","useEffect","localStorage","getItem","JSON","parse","statesName","setItem","stringify","newState","targetId","newItem","targetIndex","findIndex","index","filter","callback","handleClick","current","contains","document","addEventListener","removeEventListener"],"mappings":"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","file":"bundle.5ec3bb5c89869c9cf8e1.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport FormItem from \"../formComponents/FormItem\";\r\nimport FormButtons from \"../formComponents/FormButtons\";\r\nimport { updateState } from \"../../helpers/updateState\";\r\nimport useOutsideClick from \"../../helpers/useOutsideClick\";\r\n\r\n\r\n// Modify all of the forms so they use form item components and Buttons components\r\n\r\nfunction FooterItemForm(props) {\r\n    const ref = useRef();\r\n    const obj = props.valueObj;\r\n    const [refName, setRefName] = useState(obj.refName);\r\n    const [jobTitle, setJobTitle] = useState(obj.jobTitle);\r\n    const [companyName, setCompanyName] = useState(obj.companyName);\r\n    const [howToReach, setHowToReach] = useState(obj.howToReach);\r\n\r\n    function editOldItem() {\r\n        updateState(props.stateUpdater, obj.id, {\r\n            refName,\r\n            jobTitle,\r\n            companyName,\r\n            howToReach,\r\n            id: obj.id,\r\n            editMode: false\r\n        });\r\n    }\r\n\r\n    function addNewItem() {\r\n        if ( refName !== '' && companyName !== '' && jobTitle !== '' && howToReach !== '' ) {\r\n            props.stateUpdater((prev)=>{\r\n                return [...prev, {\r\n                    refName,\r\n                    jobTitle,\r\n                    companyName,\r\n                    howToReach,\r\n                    id: Date.now(),\r\n                    editMode: false\r\n                }]\r\n            })\r\n            props.setForm(false);\r\n        }\r\n    }\r\n\r\n    useOutsideClick(ref, ()=>{\r\n        if ( props.header === 'Edit' ) {\r\n            editOldItem();\r\n        } else if ( props.header === 'Add new' ) {\r\n            props.setForm(false);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <form ref={ ref } className=\"form footer__form\">\r\n            <h4>{ props.header } Reference</h4>\r\n            <div className=\"footer__form-row\">\r\n                <FormItem id=\"name\" label=\"References Name\" stateUpdater={ setRefName } stateValue={ refName }\r\n                          inputType=\"text\" inputRequired={ true }/>\r\n                <FormItem id=\"jobTitle\" label=\"Referencer title\" stateUpdater={ setJobTitle } stateValue={ jobTitle }\r\n                          inputType=\"text\" inputRequired={ true }/>\r\n            </div>\r\n            <div className=\"footer__form-row\">\r\n                <FormItem id=\"company\" label=\"Company name\" stateUpdater={ setCompanyName } stateValue={ companyName }\r\n                          inputType=\"text\" inputRequired={ true }/>\r\n                <FormItem id=\"contact\" label=\"How to reach\" stateUpdater={ setHowToReach }\r\n                          stateValue={ howToReach } inputType=\"text\" inputRequired={ true }/>\r\n            </div>\r\n            <FormButtons submitType={ props.header } edit={ editOldItem } add={ addNewItem } id={ obj.id }\r\n                         stateUpdater={ props.stateUpdater }/>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default FooterItemForm;","import openItemEditingForm from \"../../helpers/openItemEditingForm\";\r\nimport React from \"react\";\r\n\r\nfunction FooterItem(props) {\r\n    let item = props.valueObj;\r\n    return (\r\n        <div onClick={ ()=>{\r\n            if ( props.globalEditingMode ) openItemEditingForm(item, props.stateUpdater)\r\n        } }\r\n             className=\"footer__item pointer\">\r\n            <h4>{ item.refName } <span className=\"material-icons settings-icon\">settings</span></h4>\r\n            <p>\r\n                { item.jobTitle } <br/>\r\n                { item.companyName } <br/>\r\n                { item.howToReach } <br/>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FooterItem;","import React, { useState } from 'react';\r\nimport FooterItemForm from \"./FooterItemForm\";\r\nimport FooterItem from \"./FooterItem\";\r\nimport { getItemsFromStorage, setItemsToStorage } from \"../../helpers/localStorage\";\r\n\r\nconst defaultListItems = [\r\n    {\r\n        refName: 'Jenny Marsh',\r\n        howToReach: '123-456-7890',\r\n        jobTitle: 'Senior Software Developer',\r\n        companyName: 'ZimCore Solutions',\r\n        id: 7894561234,\r\n        editMode: false,\r\n    },\r\n    {\r\n        refName: 'Camden Michaels',\r\n        howToReach: '123-456-7890',\r\n        jobTitle: 'Software Manager',\r\n        companyName: 'Mathica Labs',\r\n        id: 456123789,\r\n        editMode: false,\r\n    }\r\n]\r\n\r\nfunction Footer(props) {\r\n    const [listOfItems, setListOfItems] = useState([]);\r\n    const [addNewFormOpen, setAddNewFormOpen] = useState(false);\r\n\r\n    getItemsFromStorage('referencesData', setListOfItems, defaultListItems);\r\n    setItemsToStorage('referencesData', listOfItems);\r\n\r\n    return (\r\n\r\n        <footer id=\"page2ele\" className=\"footer\">\r\n            <div className=\"row\">\r\n                <h3 className=\"title\">References</h3>\r\n                <div className=\"footer__container\">\r\n                    { listOfItems.map((item)=>{\r\n                        return <RenderFooterItems globalEditingMode={ props.globalEditingMode } itemType={ 'item' }\r\n                                                  stateUpdater={ setListOfItems } setFormOpen={ setAddNewFormOpen }\r\n                                                  formOpen={ addNewFormOpen } itemObj={ item } key={ item.id }/>\r\n                    }) }\r\n                </div>\r\n            </div>\r\n            <RenderFooterItems itemType={ 'Add new' } stateUpdater={ setListOfItems } setFormOpen={ setAddNewFormOpen }\r\n                               formOpen={ addNewFormOpen }/>\r\n        </footer>\r\n    );\r\n}\r\n\r\nfunction RenderFooterItems(props) {\r\n    if ( props.itemType === 'Add new' ) {\r\n        const item = {refName: '', howToReach: '', jobTitle: '', companyName: '', editMode: false};\r\n        if ( props.formOpen ) {\r\n            return <FooterItemForm stateUpdater={ props.stateUpdater } setForm={ props.setFormOpen } valueObj={ item }\r\n                                   header={ props.itemType }/>\r\n        } else {\r\n            return <button onClick={ ()=>props.setFormOpen(true) } className=\"btn footer__btn\">+ Reference</button>\r\n        }\r\n    } else if ( props.itemType === 'item' ) {\r\n        if ( props.itemObj.editMode ) {\r\n            return <FooterItemForm stateUpdater={ props.stateUpdater } setForm={ props.setFormOpen }\r\n                                   valueObj={ props.itemObj } header=\"Edit\"/>\r\n        } else {\r\n            return <FooterItem globalEditingMode={ props.globalEditingMode } stateUpdater={ props.stateUpdater }\r\n                               valueObj={ props.itemObj }/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default Footer;","import { removeItemFromList } from \"../../helpers/updateState\";\r\nimport React from \"react\";\r\n\r\nfunction FormButtons(props) {\r\n    if ( props.submitType === 'Edit' ) {\r\n        return (\r\n            <div className=\"row list-section__btn-container\">\r\n                <button onClick={ props.edit } className=\"submit-btn\">\r\n                    Submit\r\n                </button>\r\n                <button onClick={ ()=>removeItemFromList(props.stateUpdater, props.id) }\r\n                        className=\"delete-btn\">\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        )\r\n    } else if ( props.submitType === 'Add new' ) {\r\n        return <button onClick={ props.add } className=\"submit-btn\">Submit</button>\r\n    }\r\n}\r\n\r\nexport default FormButtons","import React from \"react\";\r\nimport handleFocus from \"../../helpers/handleFocus\";\r\n\r\nfunction FormItem(props) {\r\n    return (\r\n        <div className=\"form__item\">\r\n            <label htmlFor={ props.id }>{ props.label }</label>\r\n            <input onChange={ (e)=>props.stateUpdater(e.target.value) }\r\n                   onFocus={ handleFocus } value={ props.stateValue }\r\n                   name={ props.id } id={ props.id } type={ props.inputType } required={ props.inputRequired }/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormItem;","// When user starts editing any section, when input field is focused,\r\n// all of the text is selected\r\n\r\nfunction handleFocus (e) {\r\n    e.target.select();\r\n}\r\n\r\nexport default handleFocus\r\n","import {useEffect} from 'react';\r\n\r\n// If localStorage is empty, set state using stateUpdater with state content values\r\nfunction getItemsFromStorage(dataName, stateUpdater, stateContent) {\r\n    useEffect(() => {\r\n        if ( localStorage.getItem(dataName) ) {\r\n            stateUpdater(JSON.parse(localStorage.getItem(dataName)))\r\n        } else {\r\n            stateUpdater(stateContent)\r\n        }\r\n    }, [])\r\n}\r\n\r\n// If statesName changes, push that changed data to localStorage\r\nfunction setItemsToStorage(dataName, statesName) {\r\n    useEffect(() => {\r\n        localStorage.setItem(dataName, JSON.stringify(statesName))\r\n    }, [statesName])\r\n}\r\n\r\nexport {\r\n    setItemsToStorage,\r\n    getItemsFromStorage,\r\n}","import { updateState } from \"./updateState\";\r\n\r\nfunction openItemEditingForm(obj, stateUpdater) {\r\n    let newState = obj;\r\n    newState.editMode = true;\r\n    updateState(stateUpdater, newState.id, newState)\r\n}\r\n\r\nexport default openItemEditingForm;","\r\n\r\nfunction updateState(stateUpdater, targetId, newItem) {\r\n    let targetIndex;\r\n    stateUpdater((prev) => {\r\n        targetIndex = prev.findIndex((e) => {\r\n            return e.id === targetId;\r\n        })\r\n        return prev.map((item, index) => index === targetIndex ? newItem : item);\r\n    })\r\n}\r\n\r\nfunction removeItemFromList(stateUpdater, targetId) {\r\n    stateUpdater((prev) => {\r\n        return prev.filter(item => item.id !== targetId)\r\n    })\r\n}\r\n\r\n\r\nexport {\r\n    updateState,\r\n    removeItemFromList,\r\n}","import {useEffect} from 'react';\r\n\r\n//assign the reference to any react component/element and use that to tell the hook what element you are referring to.\r\n// It will then check if the click event is outside that element and trigger the callback\r\nfunction useOutsideClick(ref, callback) {\r\n    const handleClick = e => {\r\n        if ( ref.current && !ref.current.contains(e.target) ) {\r\n            callback();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"click\", handleClick);\r\n\r\n        return () => {\r\n            document.removeEventListener(\"click\", handleClick);\r\n        };\r\n    });\r\n}\r\n\r\nexport default useOutsideClick;"],"sourceRoot":""}